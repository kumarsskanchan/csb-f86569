{"version":3,"sources":["App.js","index.js"],"names":["App","React","useState","text","isDone","toDo","settoDo","DeleteItem","ind","markCross","edit","className","add","map","item","Card","Body","AddItem","name","age","setAge","handleinput","e","typeName","target","value","undefined","Form","onSubmit","preventDefault","setValue","FormGroup","FormControl","type","size","onChange","placeholder","Button","variant","DisplayItemList","onClick","rootElement","document","getElementById","createRoot","render"],"mappings":"qOAIe,SAASA,IACtB,MAAwBC,IAAMC,SAAS,CACrC,CACEC,KAAM,eACNC,QAAQ,KAHZ,mBAAOC,EAAP,KAAaC,EAAb,KAWMC,EAAa,SAACC,KAKdC,EAAY,SAACD,KAMbE,EAAO,SAACF,KAMd,OACE,sBAAKG,UAAU,MAAf,UACE,cAAC,EAAD,CAASC,IAxBD,SAACT,GACXG,EAAQ,GAAD,mBAAKD,GAAL,CAAWF,QAwBhB,qCACGE,QADH,IACGA,OADH,EACGA,EAAMQ,KAAI,SAACC,EAAMN,GAAP,OACT,cAACO,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,KAAN,UACE,cAAC,EAAD,CACEF,KAAMA,EACNN,IAAKA,EACLD,WAAYA,EACZE,UAAWA,EACXC,KAAMA,gBAUtB,IAAMO,EAAU,SAAC,GAAa,IAAXL,EAAU,EAAVA,IACjB,EAAwBX,IAAMC,SAAS,IAAvC,mBAAOgB,EAAP,KACA,GADA,KACsBjB,IAAMC,YAA5B,mBAAOiB,EAAP,KAAYC,EAAZ,KAQMC,EAAc,SAACC,GACnB,IAAMC,EAAWD,EAAEE,OAAON,KACpBO,EAAQH,EAAEE,OAAOC,MACN,QAAbF,QAAgCG,IAAVD,GACxBL,EAAOD,IAGX,OACE,eAACQ,EAAA,EAAD,CAAMC,SAfa,SAACN,GACpBA,EAAEO,iBAEGJ,QACLb,EAAIa,OACJK,SAAS,MAUT,UACE,eAACC,EAAA,EAAD,mBAEE,cAACC,EAAA,EAAD,CACEC,KAAK,OACLtB,UAAU,QACVuB,KAAK,KACLT,MAAOP,EACPiB,SAAU,SAACb,GAAD,OAAOD,EAAYC,IAC7Bc,YAAY,qBAGhB,eAACL,EAAA,EAAD,kBAEE,cAACC,EAAA,EAAD,CACEC,KAAK,OACLtB,UAAU,QACVuB,KAAK,KACLT,MAAON,EACPgB,SAAU,SAACb,GAAD,OAAOD,EAAYC,IAC7Bc,YAAY,qBAGhB,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUL,KAAK,SAA/B,wBAOAM,EAAkB,SAAC,GAAgD,IAA9CzB,EAA6C,EAA7CA,KAAMN,EAAuC,EAAvCA,IAAKD,EAAkC,EAAlCA,WAAYE,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,KAC3D,OACE,sBAAKC,UAAU,OAAf,UACE,sBAAMA,UAAWG,EAAKV,OAAS,eAAiB,GAAhD,SAAqDU,EAAKX,OAC1D,iCACE,cAACkC,EAAA,EAAD,CAAQC,QAAQ,kBAAkBE,QAAS,kBAAM/B,EAAUD,IAA3D,oBAGA,cAAC6B,EAAA,EAAD,CAAQC,QAAQ,iBAAiBE,QAAS,kBAAMjC,EAAWC,IAA3D,oBAGA,cAAC6B,EAAA,EAAD,CAAQC,QAAQ,iBAAiBE,QAAS,kBAAM9B,EAAKF,IAArD,yBC7GFiC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAAC7C,EAAD,S","file":"static/js/main.1ed520b4.chunk.js","sourcesContent":["import \"./styles.css\";\nimport React from \"react\";\nimport { Button, Form, FormGroup, FormControl, Card } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nexport default function App() {\n  const [toDo, settoDo] = React.useState([\n    {\n      text: \"Sample to Do\",\n      isDone: false\n    }\n  ]);\n  const add = (text) => {\n    settoDo([...toDo, text]);\n    // const newtoDo = [...toDo, { text }];\n    // settoDo(newtoDo);\n  };\n  const DeleteItem = (ind) => {\n    // const newtoDo = [...toDo];\n    // newtoDo.splice(ind, 1);\n    // settoDo(newtoDo);\n  };\n  const markCross = (ind) => {\n    // const newtoDo = [...toDo];\n    // newtoDo[ind].isDone = true;\n    // settoDo(newtoDo);\n  };\n  //Edit Start\n  const edit = (ind) => {\n    // const newtoDo = [...toDo];\n    // setEditPos(ind);\n    // setEditFlag(true);\n    // settoDo(newtoDo);\n  };\n  return (\n    <div className=\"App\">\n      <AddItem add={add} />\n      <div>\n        {toDo?.map((item, ind) => (\n          <Card>\n            <Card.Body>\n              <DisplayItemList\n                item={item}\n                ind={ind}\n                DeleteItem={DeleteItem}\n                markCross={markCross}\n                edit={edit}\n              />\n            </Card.Body>\n          </Card>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nconst AddItem = ({ add }) => {\n  const [name, setName] = React.useState(\"\");\n  const [age, setAge] = React.useState();\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!value) return;\n    add(value);\n    setValue(\"\");\n  };\n  const handleinput = (e) => {\n    const typeName = e.target.name;\n    const value = e.target.value;\n    if (typeName === \"age\" && value !== undefined) {\n      setAge(age);\n    }\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormGroup>\n        Name:\n        <FormControl\n          type=\"text\"\n          className=\"input\"\n          size=\"sm\"\n          value={name}\n          onChange={(e) => handleinput(e)}\n          placeholder=\"Add new to Do\"\n        ></FormControl>\n      </FormGroup>\n      <FormGroup>\n        Age:\n        <FormControl\n          type=\"text\"\n          className=\"input\"\n          size=\"sm\"\n          value={age}\n          onChange={(e) => handleinput(e)}\n          placeholder=\"Add new to Do\"\n        ></FormControl>\n      </FormGroup>\n      <Button variant=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n    </Form>\n  );\n};\n\nconst DisplayItemList = ({ item, ind, DeleteItem, markCross, edit }) => {\n  return (\n    <div className=\"todo\">\n      <span className={item.isDone ? \"line-through\" : \"\"}>{item.text}</span>\n      <span>\n        <Button variant=\"outline-success\" onClick={() => markCross(ind)}>\n          ✓\n        </Button>\n        <Button variant=\"outline-danger\" onClick={() => DeleteItem(ind)}>\n          ✕\n        </Button>\n        <Button variant=\"outline-danger\" onClick={() => edit(ind)}>\n          Edit\n        </Button>\n      </span>\n    </div>\n  );\n};\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}